ActivateKey = "z"
--
math.randomseed(tick())
RService = game:GetService("RunService")
UIS = game:GetService("UserInputService")
CAS = game:GetService("ContextActionService")
ChatService = game:GetService("Chat")
ButtonHolding = nil
--
ZoneColor = BrickColor.new("Really red")
ZoneSpeed = 26
ZoneContestSpeed = 30
CD = false
On = false
Duration = 90
LastUseTime = 0
ReloadTime = 360
ReloadTimeMax = 360
--
Plr = game.Players.LocalPlayer
Mouse = Plr:GetMouse()
Char = Plr.Character or Plr.CharacterAdded:wait()
Char = workspace:WaitForChild(Plr.Name)
--
function TpFx(A,B,s1,s2)
	local Fx = Instance.new("Part",workspace)
	Fx.CanCollide = false
	Fx.Anchored = true
	Fx.BrickColor = ZoneColor
	Fx.Transparency = 0.4
	Fx.FormFactor = "Custom"
	Fx.TopSurface = 0
	Fx.BottomSurface = 0
	Fx.Size = Vector3.new(s1,s2,(A.p-B.p).Magnitude)
	Fx.CFrame = CFrame.new(A.p,B.p)*CFrame.new(0,0,-(A.p-B.p).Magnitude/7)
	return Fx
end
--
TrueZone = function(stringa,userinputstate,inputobject)
	if CD == true or userinputstate == Enum.UserInputState.End then return end
	CD = true
	if On == false then
		On = true
		LastUseTime = tick()
		ChatService:Chat(Char,"I will not lose here...",2)
		wait(0.5)
		ChatService:Chat(Char,"Zone!",2)
		Char.PrimaryPart = Char:WaitForChild("Torso")
		Char:WaitForChild("Humanoid").WalkSpeed = ZoneSpeed
		local ZoneGlow = Instance.new("PointLight",Char:WaitForChild("Torso"))
		ZoneGlow.Brightness = math.huge
		ZoneGlow.Color = ZoneColor.Color
		ZoneGlow.Range = 15
		spawn(function()
			while On == true do RService.RenderStepped:wait() end
			ZoneGlow:Destroy()
			Char.Humanoid.WalkSpeed = 16
		end)
		local LaserEyesFunction = function()
			--LeftEye CFrame =  Head.CFrame*CFrame.new(-.175,.225,-.6)
			--RightEye CFrame =  Head.CFrame*CFrame.new(.175,.225,-.6)
			local LastCF = nil
			while On == true do 
				local FxCreated
				local FxCreated2
				if LastCF == nil then
					local C1 = Char:WaitForChild("Head").CFrame
					RService.RenderStepped:wait()
					FxCreated = TpFx(Char:WaitForChild("Head").CFrame*CFrame.new(-.175,.225,-.6),C1*CFrame.new(-.175,.225,-.6),0,0)
					FxCreated2 = TpFx(Char:WaitForChild("Head").CFrame*CFrame.new(.175,.225,-.6),C1*CFrame.new(.175,.225,-.6),0,0)
					LastCF = C1
				else
				FxCreated = TpFx(Char:WaitForChild("Head").CFrame*CFrame.new(-.175,.225,-.6),LastCF*CFrame.new(-.175,.225,-.6),0,0)
				FxCreated2 = TpFx(Char:WaitForChild("Head").CFrame*CFrame.new(.175,.225,-.6),LastCF*CFrame.new(.175,.225,-.6),0,0)
				LastCF = Char:WaitForChild("Head").CFrame
				end
				spawn(function()
					wait(.1)
					FxCreated2:Destroy()
					FxCreated:Destroy()
				end)
				RService.RenderStepped:wait()
			end
		end
		spawn(LaserEyesFunction)
		wait(Duration)
		On = false
	else
		On = false
		ChatService:Chat(Char,ReloadTime.." seconds til I can reuse...")
	end
	wait(ReloadTime)
	CD = false
end
--
CAS:BindAction("TrueZone",TrueZone,true,ActivateKey)
Char:WaitForChild("Humanoid").Died:wait()
CAS:UnbindAction("TrueZone")
--tbnj123
-----------------------------------
local Player = game.Players.LocalPlayer
local debounce = false

local function inputBegan(inputObject, gameProcessedEvent)
	if debounce then return end
	debounce = true
	
	if inputObject.KeyCode == Enum.KeyCode.X and not gameProcessedEvent and Player.Character then
		local humanoid = Player.Character:FindFirstChild("Humanoid")
		local torso = Player.Character:FindFirstChild("Torso")
		
		local head = Player.Character:FindFirstChild("Head")
		if head then
			game:GetService("Chat"):Chat(head, "Jump!")
		end
		
		if humanoid and torso then
			local jump = Instance.new("BodyForce")
			jump.Parent = torso
			jump.force = Vector3.new(0,6500,0)
			wait(.5)
			if jump then jump:Destroy() end
			
			if humanoid then
				humanoid.WalkSpeed = 2
				wait(2)
			end
			if humanoid then 
				humanoid.WalkSpeed = 16
				wait(10)
			end
		end	
	end
	debounce = false
end

game:GetService("UserInputService").InputBegan:connect(inputBegan)
-----------------------------
local Player = game.Players.LocalPlayer
Char = Player.Character or Player.CharacterAdded:wait()
local debounce = false
local Player = game.Players.LocalPlayer
Char = Player.Character or Player.CharacterAdded:wait()
local debounce = false
EffectColor = BrickColor.new("Really red")
Char = workspace[Player.Name]


local function inputBegan(inputObject, gameProcessedEvent)
if debounce then return end
debounce = true
if inputObject.KeyCode == Enum.KeyCode.C and not gameProcessedEvent and Player.Character then
local humanoid = Player.Character:FindFirstChild("Humanoid")
game:GetService("Chat"):Chat(Player.Character.Head, "Dash!")
if humanoid then
humanoid.WalkSpeed = 27
local stopit = false
local waitsy = coroutine.wrap(function()
	wait(2)
	stopit = true
end)
waitsy()
asd = false
local lasttorsopX = Char.Torso.Position.X
local lasttorsopZ = Char.Torso.Position.Z
while stopit == false do wait()
	if stopit == true then break end
	if asd == false then
	local kasda = coroutine.wrap(function()
		wait(0.85)
		asd = false
	end)
	kasda()
	
	if Char.Torso.Position.X ~= lasttorsopX or Char.Torso.Position.Z ~= lasttorsopZ then 
					lasttorsopX = Char.Torso.Position.X
					lasttorsopZ = Char.Torso.Position.Z
		for _,part in pairs(Char:GetChildren()) do
			local parttoclone = nil
			local savedcframe = nil
			if part.Name ~= "HumanoidRootPart" then
				if part:IsA("BasePart") then
					parttoclone = part
					savedcframe = part.CFrame
				elseif part:IsA("Hat") then
					parttoclone = part.Handle
					savedcframe = part.Handle.CFrame
				end
				if parttoclone ~= nil then
					local PartHolder = Instance.new("Model",Char.Torso)
					PartHolder.Name = ""
					local PC = Instance.new("Part")
					PC.Parent = workspace
					PC.FormFactor = "Custom"
					PC.CanCollide = false
					PC.Anchored = true
					PC.Name = parttoclone.Name
					PC.BrickColor = EffectColor
					PC.Size = parttoclone.Size
					PC.TopSurface = 0
					PC.BottomSurface = 0
					PC.Transparency = 0.5
					PC.CFrame = savedcframe
					PC.Parent = PartHolder
					PC.CanCollide = false
					PC.Changed:connect(function()
						PC.CanCollide = false
					end)
					if parttoclone:FindFirstChild("Mesh") then
						local Mesh = parttoclone.Mesh:Clone()
						Mesh.TextureId = ""
						Mesh.Parent = PC
					end
					local fade = coroutine.wrap(function()
						for i = 1, 20 do
						PC.Transparency = PC.Transparency + 0.1/4
						wait()
						end
					end)
					fade()
					local delete = coroutine.wrap(function()
					wait(0.1)
					PartHolder:Destroy()
					end)		
					delete()			
				end
			end
		end
		end
	end
end
if humanoid then
humanoid.WalkSpeed = 16
wait(9)
end
end
end
debounce = false
end

game:GetService("UserInputService").InputBegan:connect(inputBegan)
----------------------------------------------------------

ChatService = game:GetService("Chat")
RS = game:GetService("RunService").RenderStepped
ActivateKey = "v"
Plr = game.Players.LocalPlayer
Char = Plr.Character or Plr.CharacterAdded:wait()
CD = false
On = false
ReloadTime = 3
EagleSpots = {}
EagleBin = Instance.new("Message",Char)
Char = workspace:WaitForChild(Plr.Name)

function ConvertCode(keycode)
	local code = tostring(keycode)
	local pattern = "Enum.KeyCode%p%a"
	local anchor = "%p%a+"
	local finalkey = ""
	for t in code:gmatch(anchor) do
		for fc in t:gmatch("%a+") do
		finalkey = fc
		end
	end
	return finalkey:lower()
end

function EE()
	if On == false then
	On = true
	ChatService:Chat(Char,"Eagle Eye!",2)
	ReloadTime = 0
	local Tags = {}
	local co = coroutine.wrap(function()
		while On == true do RS:wait()
			for _,obj in pairs(workspace:GetChildren()) do
				if obj:FindFirstChild("Torso") then
					local found = false
					for _,p in next, Tags do
						if p == obj.Torso then
							found = true
							break
						end
					end
					if found == false then
					local E = Instance.new("Part",EagleBin)
					E.BrickColor = BrickColor.new("Black")
					local PlrAttempt = game.Players:GetPlayerFromCharacter(obj)
					if PlrAttempt ~= nil then
						E.BrickColor = PlrAttempt.TeamColor
					end
					E.Transparency = .4
					E.Anchored = false
					E.CanCollide = false
					E.FormFactor = "Custom"
					E.Size = Vector3.new(5,5,5)
					local EW = Instance.new("Weld",E)
					EW.Part0 = E
					EW.Part1 = obj.Torso
					table.insert(EagleSpots,E)
					table.insert(Tags,obj.Torso)
					end
				end
			end
		end
		return
	end)
	co()
	else
	On = false
	ChatService:Chat(Char,"Eagle Eye off!",2)
	ReloadTime = 3	
	for _,e in pairs(EagleSpots) do
		e:Destroy()
	end
	end
	wait(ReloadTime)
	CD = false
end

game:GetService("UserInputService").InputBegan:connect(function(inputobject,gpe)
	local code = inputobject.KeyCode
	local Key = ConvertCode(code)
	if CD == false and Key == ActivateKey and not gpe then
		CD = true
		EE()
	end
end)
